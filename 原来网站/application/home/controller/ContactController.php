<?php

namespace app\home\controller;

use app\common\controller\HomeController;
use app\common\model\Contact;
use app\common\model\Slider;
use app\common\model\Service;
use app\common\model\BackUser;

/**
 * 默认控制器
 * @author Sir Fu
 */
class ContactController extends HomeController
{
    //广告类别
    private $sliderType = 7;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('nav','contact');
    }

    /**
     * 默认方法
     * @author Sir Fu
     */
    public function indexAction()
    {
        $list = [];
        $where = ['type'=>$this->sliderType];
        $slider = Slider::getSlider($where);
        foreach ($slider as $item){
            $list[] = [
                'title'=>$item['title'],
                'desc'=>$item['description'],
                'target'=>$item['target'],
                'url'=>$item['url'],
            ];
        }
        if (empty($list)){
            $where = array_merge($where,['isDefault'=>'1']);
            $slider = Slider::getSlider($where,null,true);
            foreach ($slider as $item){
                $list[] = [
                    'title'=>$item['title'],
                    'desc'=>$item['description'],
                    'target'=>$item['target'],
                    'url'=>$item['url'],
                ];
            }
        }
        if (empty($list)){
            $list[] = [
                'title'=>'',
                'desc'=>'',
                'target'=>'',
                'url'=>Slider::T('default',$this->sliderType),
            ];
        }
        $slider = json_encode($list);

        return view('contact/index',[
            'meta_title'=>'联系我们',
            'slider'=>$slider,
        ]);
    }

    /**
     * 显示创建资源表单页
     *
     * @return \think\Response
     */
    public function contactAction()
    {

        $this->useLayoutMain();

        return view('contact/contact',[
            'meta_title'=>'联系我们',
        ]);
    }

    /**
     * 显示创建资源表单页
     *
     * @return \think\Response
     */
    public function hotServiceAction()
    {
        $list = [];
        $where = ['type'=>$this->sliderType];
        $slider = Slider::getSlider($where);
        foreach ($slider as $item){
            $list[] = [
                'title'=>$item['title'],
                'desc'=>$item['description'],
                'target'=>$item['target'],
                'url'=>$item['url'],
            ];
        }
        if (empty($list)){
            $where = array_merge($where,['isDefault'=>'1']);
            $slider = Slider::getSlider($where,null,true);
            foreach ($slider as $item){
                $list[] = [
                    'title'=>$item['title'],
                    'desc'=>$item['description'],
                    'target'=>$item['target'],
                    'url'=>$item['url'],
                ];
            }
        }
        if (empty($list)){
            $list[] = [
                'title'=>'',
                'desc'=>'',
                'target'=>'',
                'url'=>Slider::T('default',$this->sliderType),
            ];
        }
        $slider = json_encode($list);

        $each = 12;
        $model = Service::load();
        $list = $model->alias('t')
            ->join([BackUser::tableName()=>'b'],'t.back_user_id = b.id')
            ->where([
                't.is_delete'=>'1',
                'b.is_delete'=>'1',
                't.level'=>'2',
            ])->order('t.order','ASC')->relation('getBackUser')->paginate($each);

        return view('contact/hotService',[
            'meta_title'=>'金牌客服',
            'slider'=>$slider,
            'list'=>$list,
        ]);
    }

    /**
     * 显示创建资源表单页
     *
     * @return \think\Response
     */
    public function serviceAction()
    {
        $list = [];
        $where = ['type'=>$this->sliderType];
        $slider = Slider::getSlider($where);
        foreach ($slider as $item){
            $list[] = [
                'title'=>$item['title'],
                'desc'=>$item['description'],
                'target'=>$item['target'],
                'url'=>$item['url'],
            ];
        }
        if (empty($list)){
            $where = array_merge($where,['isDefault'=>'1']);
            $slider = Slider::getSlider($where,null,true);
            foreach ($slider as $item){
                $list[] = [
                    'title'=>$item['title'],
                    'desc'=>$item['description'],
                    'target'=>$item['target'],
                    'url'=>$item['url'],
                ];
            }
        }
        if (empty($list)){
            $list[] = [
                'title'=>'',
                'desc'=>'',
                'target'=>'',
                'url'=>Slider::T('default',$this->sliderType),
            ];
        }
        $slider = json_encode($list);

        $each = 12;
        $model = Service::load();
        $list = $model->alias('t')
            ->join([BackUser::tableName()=>'b'],'t.back_user_id = b.id')
            ->where([
                't.is_delete'=>'1',
                'b.is_delete'=>'1',
            ])->order('t.order','ASC')->relation('getBackUser')->paginate($each);

        return view('contact/hotService',[
            'meta_title'=>'客服清单',
            'slider'=>$slider,
            'list'=>$list,
        ]);
    }


    /**
     * 显示创建资源表单页.| 保存新建的资源
     *
     * @return \think\Response
     */
    public function createAction()
    {
        $ret = ['status'=>'0','info'=>'提交失败'];
        if ($this->getRequest()->isPost()){
            $model = new Contact();
            $data = $model->filter($_POST);
            if ($data){
                $data['home_user_id'] = $this->getIdentity('id')?:'0';
                $data['back_user_id'] = isset($data['back_user_id'])? $data['back_user_id'] :'0';
                $data['created_at'] = date('Y-m-d H:i:s');
                $validate = Contact::getValidate();
                $validate->scene('create');
                if ($validate->check($data) && $model->save($data)){
                    $ret = ['status'=>'1','info'=>'提交成功'];
                }else{
                    $error = $validate->getError();
                    if (empty($error)){
                        $error = $model->getError();
                    }
                    $ret = ['status'=>'0','info'=>$error];
                }
            }
        }
        return json($ret);
    }

}
