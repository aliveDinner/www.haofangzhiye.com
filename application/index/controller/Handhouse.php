<?php

namespace app\index\controller;


use app\common\controller\Frontend;
/**
 * 默认控制器
 * @author Sir Fu
 */
class Handhouse extends Frontend
{
    protected $model = null;
    //广告类别
    private $sliderType = 4;
    // 资讯类别
    private $newsType = 4;


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = model('House');
        $this->assign('nav','hand-house');
        $this->loadlang("house");
    }

    /**
     * 默认方法
     * @author Sir Fu
     */
    public function index()
    {
        $list = [];
        $where = ['type'=>$this->sliderType];
        $slider = Slider::getSlider($where);
        foreach ($slider as $item){
            $list[] = [
                'title'=>$item['title'],
                'desc'=>$item['description'],
                'target'=>$item['target'],
                'url'=>$item['url'],
            ];
        }
        if (empty($list)){
            $where = array_merge($where,['isDefault'=>'1']);
            $slider = Slider::getSlider($where,null,true);
            foreach ($slider as $item){
                $list[] = [
                    'title'=>$item['title'],
                    'desc'=>$item['description'],
                    'target'=>$item['target'],
                    'url'=>$item['url'],
                ];
            }
        }
        if (empty($list)){
            $list[] = [
                'title'=>'',
                'desc'=>'',
                'target'=>'',
                'url'=>Slider::T('default',$this->sliderType),
            ];
        }
        $slider = json_encode($list);

        //二手房
        $houseModel = Handhouse::load();
        $house = $houseModel->where([])->select();

        // 资讯
        $newsModel = News::load();
        $news = $newsModel->where(['type'=>$this->newsType])->select();

        return view('handhouse/index',[
            'meta_title'=>'二手房',
            'slider'=>$slider,
            'house'=>$house,
            'news'=>$news,
        ]);
    }

        /**
         * 默认方法
         * @author Sir Fu
         */
 public function search()
    {
        //$type = $this->request->get("HouseType", 1);
        $query = $this->GetQuery();
        $where = ['HouseType' => '1','Status'=>1,'ShowStatus'=>1];
        $query->where($where);
        //新房
        $house = $query->select();
        $this->view->assign("houseList", $house);
        $this->view->assign("model", $this->model);
        return $this->fetch();
    }

    private function GetQuery()
    {
        $keyword = $this->request->get("keyword", "");
        $selCiyt=$this->request->get("selCity","");
        $houseTypeArr = $this->request->get("houseType/a");
        $room = $this->request->get("room", "");
        $hall = $this->request->get("hall", "");
        $toilet = $this->request->get("toilet", "");
        $houseLabelArr = $this->request->get("houseLabel/a");
        $face = $this->request->get("face", "");
        $fitmentArr = $this->request->get("fitment/a");
        $price = $this->request->get("price", "");
        $area = $this->request->get("area", "");
        $create = $this->request->get("create", "");

        $query = $this->model->getQuery();

        if (!empty($keyword)) {
            $query->where('HouseName|BiaoTi', 'like', '%' . $keyword . '%');
        }
        if (!empty($selCiyt))
        {
            $query->where('Adress_city|Adress', 'like', '%' . $selCiyt . '%');
        }
        //var_dump($houseTypeArr);die();
        if ($houseTypeArr != null && count($houseTypeArr) > 0) {
            $query->where('ZhuZhaiLeiXing', 'in', $houseTypeArr);
        }

        if ($room != "") {
            if ($room > 5) {
                $query->where('HuXing_Shi', '>=', $room);
            } else {
                $query->where('HuXing_Shi', '=', $room);
            }

        }
        if ($hall != "") {
            if ($hall > 2) {
                $query->where('HuXing_Ting', '>=', $hall);
            } else {
                $query->where('HuXing_Ting', '=', $hall);
            }
        }
        if ($toilet != "") {
            if ($toilet > 2) {
                $query->where('HuXing_Ting', '>=', $toilet);
            } else {
                $query->where('HuXing_Ting', '=', $toilet);
            }
        }
        if ($houseLabelArr != null && count($houseLabelArr) > 0) {
            $query->where('ChanQuanNianXian', 'in', $houseLabelArr);
        }
        if ($fitmentArr != null && count($fitmentArr) > 0) {
            $query->where('ZhuangXiuLeiXing', 'in', $fitmentArr);
        }
        if ($face != "") {
            $query->where('ChaoXiang', '=', $face);

        }
        if ($price != "") {
            switch ($price) {
                case '1':
                    $query->where('FangJia', '<=', 500000);
                    break;
                case '2':
                    $query->where('FangJia', ['>', 500000], ['<=', 700000]);
                    break;
                case '3':
                    $query->where('FangJia', ['>', 700000], ['<=', 1000000]);
                    break;
                case '4':
                    $query->where('FangJia', ['>', 1000000], ['<=', 1300000]);
                    break;
                case '5':
                    $query->where('FangJia', ['>', 1300000], ['<=', 1600000]);
                    break;
                case '6':
                    $query->where('FangJia', ['>', 1600000], ['<=', 2000000]);
                    break;
                default:
                    $query->where('FangJia', '>', 2000000);
                    break;
            }
        }
        if ($area != "") {
            switch ($area) {
                case '1':
                    $query->where('JianZhuMianJi', '<=', 50);
                    break;
                case '2':
                    $query->where('JianZhuMianJi', ['>', 50], ['<=', 70]);
                    break;
                case '3':
                    $query->where('JianZhuMianJi', ['>', 70], ['<=', 100]);
                    break;
                case '4':
                    $query->where('JianZhuMianJi', ['>', 100], ['<=', 130]);
                    break;
                case '5':
                    $query->where('JianZhuMianJi', ['>', 130], ['<=', 160]);
                    break;
                case '6':
                    $query->where('JianZhuMianJi', ['>', 160], ['<=', 200]);
                    break;
                default:
                    $query->where('JianZhuMianJi', '>', 200);
                    break;
            }
        }
        if ($create != "") {
            switch ($create) {
                case '1':
                    $query->where('createtime', '>=', strtotime("-1 days"));
                    break;
                case '2':
                    $query->where('createtime', '>=', strtotime("-3 days"));
                    break;
                case '3':
                    $query->where('createtime', '>=', strtotime("-1 week"));
                    break;
                case '4':
                    $query->where('createtime', '>=', strtotime("-3 week"));
                    break;
                case '5':
                    $query->where('createtime', '>=', strtotime("-1 months"));
                    break;
                default:
                    //$query->where('createtime', '>=', strtotime("-3 days"));
                    break;
            }
        }
        return $query;
    }
}
